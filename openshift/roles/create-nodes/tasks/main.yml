- name: check if master nodes are already up
  wait_for:
    port: 22
    host: "{{ hostvars[item]['ansible_host'] }}"
    delay: 5
    timeout: 10
    msg: "Timeout waiting for 22 to respond"
  register: port_check
  ignore_errors: yes
  with_items: "{{ groups['openshift_masters'] }}"
 
- set_fact: 
    ocp_running: "{{ True if port_check.failed == False else False }}"

- name: create ocp vagrant dir
  when: ocp_running == false
  file:
    path: /opt/ocpnodes
    state: directory
    mode: '0777'

- name: copy ocp nodes vagrant file
  when: ocp_running == false
  template: 
    src: ocp.vagrant
    dest: /opt/ocpnodes/Vagrantfile
    mode: 0777

- name: create openshift node VMs with vagrant - this may take some time
  when: ocp_running == false
  command: vagrant up
  args:
    chdir: /opt/ocpnodes

- name: Wait for openshift bootstrap to complete
  delegate_to: ocphelper.mytest.accanto.com
  when: ocp_running == false
  shell: /usr/bin/openshift-install --dir=/opt/ocp4 wait-for bootstrap-complete

- name: Remove bootstrap node
  when: ocp_running == false
  command: vagrant destroy ocpbootstrap.mytest.accanto.com -f
  args:
    chdir: /opt/ocpnodes

- name: Remove bootstrap from load balancer
  when: ocp_running == false
  delegate_to: ocphelper.mytest.accanto.com
  lineinfile: 
    dest: /etc/haproxy/haproxy.cfg
    state: absent
    regexp: "^   server ocpbootstrap*"

- name: restart load balancer
  delegate_to: ocphelper.mytest.accanto.com
  when: ocp_running == false
  service:
    name: haproxy
    state: restarted

- name: wait for installation to complete
  delegate_to: ocphelper.mytest.accanto.com
  when: ocp_running == false
  shell: /usr/bin/openshift-install --dir=/opt/ocp4 wait-for install-complete
  