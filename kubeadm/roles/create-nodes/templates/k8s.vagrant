Vagrant.configure(2) do |config|

{% for host in groups['k8smasters'] %}
  config.vm.define "{{ hostvars[host].inventory_hostname }}" do |nodeconfig|
    nodeconfig.vm.hostname = 'k8smaster'
    nodeconfig.vm.box = 'accanto/xenial'
    nodeconfig.vm.box_version = "1.0"
    nodeconfig.vm.synced_folder ".", "/vagrant", disabled: true
    nodeconfig.vm.network :private_network, :ip => "{{ hostvars[host]['ansible_host'] }}",
            libvirt__network_name: "helper_managed",
            libvirt__dhcp_enabled: false,
            libvirt__host_ip: '192.168.10.1'

    nodeconfig.vm.provider :libvirt do |libvirt|
      libvirt.cpus = {{ hostvars[host]['vagrant_cpu'] }}
      libvirt.memory = {{ hostvars[host]['vagrant_mem'] }}
      libvirt.nested = true
      libvirt.cpu_mode = 'host-passthrough'
    end
  end
{% endfor %}
{% for host in groups['k8sworkers'] %}
  config.vm.define "{{ hostvars[host].inventory_hostname }}" do |nodeconfig|
    nodeconfig.vm.hostname = "{{ hostvars[host].inventory_hostname }}"
    nodeconfig.vm.box = 'accanto/xenial'
    nodeconfig.vm.box_version = "1.0"
    nodeconfig.vm.synced_folder ".", "/vagrant", disabled: true
    nodeconfig.vm.network :private_network, :ip => "{{ hostvars[host]['ansible_host'] }}",
            libvirt__network_name: "helper_managed",
            libvirt__dhcp_enabled: false,
            libvirt__host_ip: '192.168.10.1'
{% if install_underlay == True %}
    nodeconfig.vm.network :public_network, :dev => "s3", :mode => "bridge", :type => "bridge", :ovs => true, auto_config: false
    nodeconfig.vm.network :public_network, :dev => "s4", :mode => "bridge", :type => "bridge", :ovs => true, auto_config: false
{% endif %}
    nodeconfig.vm.provider :libvirt do |libvirt|
      libvirt.cpus = {{ hostvars[host]['vagrant_cpu'] }}
      libvirt.memory = {{ hostvars[host]['vagrant_mem'] }}
      libvirt.nested = true
      libvirt.cpu_mode = 'host-passthrough'
    end
  end
{% endfor %}
end
