--- 
- hosts: openstack
  gather_facts: no
  become: yes
  tasks:
    - name: unregister subscription from openstack nodes
      redhat_subscription:
        state: absent
        username: "{{ subscription_user }}"
        password: "{{ subscription_password }}"
        pool_ids: "{{ openstack_pool_id }}"
      when: install_openstack == true and openstack_offical_redhat == true

- hosts: underlay
  gather_facts: no
  become: yes
  tasks:
    - name: destroy openshift nodes
      when: install_openshift == true
      command: vagrant destroy -f
      ignore_errors: yes
      args:
        chdir: /opt/ocpnodes

    - name: destroy openshift helper
      when: install_openshift == true
      command: vagrant destroy -f
      ignore_errors: yes
      args:
        chdir: /opt/ocphelper

    - name: destroy openstack
      when: install_openstack == true
      command: vagrant destroy -f
      ignore_errors: yes
      args:
        chdir: /opt/openstack

    - name: destroy k8s
      when: install_kubeadm == true
      command: vagrant destroy -f
      ignore_errors: yes
      args:
        chdir: /opt/k8s

    - name: destroy LM AIO
      when: install_aio == true
      command: vagrant destroy -f
      ignore_errors: yes
      args:
        chdir: /opt/lm

    - name: kill mininet
      when: install_underlay == true
      uri:
        url: http://localhost:5000/exit
      ignore_errors: yes
      
    - name: stop onos
      when: install_underlay == true
      service:
        name: onos
        state: stopped

    - name: disable onos
      when: install_underlay == true
      systemd:
        name: onos
        enabled: no
        masked: no

    - name: clean onos directory
      when: install_underlay == true
      file:
        path: /opt/onos
        state: absent

    - name: disable openvpn server
      when: install_openvpn == True
      service:
        name: openvpn@server
        state: stopped
        enabled: no

    - name: kill skydive
      when: install_underlay == true
      command: pkill skydive
      when: install_skydive == True